#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = SLR
#RegularDefinitions
minu: [a-z]
mai: [A-Z]
letra: {minu} | {mai}
d: [0-9]
int: 0 | ([1-9]{d}*)
prefixos: i_ | f_ | s_ | b_
id_p1: {mai}
id_p2: {minu}|{mai}({minu}|{d})
id_p3: ({minu}|{d}|{mai}({d}|{minu}))*

#Tokens
// Gustavo Vergilio Poleza | Lemuel Manske | João Henrique

palavra_reservada: {minu}{letra}*

pr_main = palavra_reservada: "main"
pr_end = palavra_reservada: "end"
pr_if = palavra_reservada: "if"
pr_elif = palavra_reservada: "elif"
pr_else = palavra_reservada: "else"
pr_false = palavra_reservada: "false"
pr_true = palavra_reservada: "true"
pr_read = palavra_reservada: "read"
pr_write = palavra_reservada: "write"
pr_writeln = palavra_reservada: "writeln"
pr_repeat = palavra_reservada: "repeat"
pr_until = palavra_reservada: "until"
pr_while  = palavra_reservada: "while"


id:!{prefixos}({id_p1}|({id_p2}{id_p3}{mai}?))

constante_int: {int}
constante_float: {int}","(0 | {d}*[1-9])
constante_string: \"([^\n\""%"] | "%"x)*\"

:! ">@"\n[^"@"]*\n"@<"

"&&"
"||"
"!"
"=="
"!="
"<"
">"
"+"
"-"
"*"
"/"
","
";"
"="
"("
")"

:[\s\n\t]
#NonTerminals
<programa>

<lista_instr>

<instrucao>

<declaracao_var>

<lista_id>

<comando>

<atribuicao>

<input>

<output>

<selecao>

<repeticao>

<expressao>

<lista_inputs>

<inicio_input>

<lista_expr>

<lista_comandos>

<if>

<elif>

<else>

<repeat_while>

<repeat_until>

// >
#Grammar
<programa> ::= pr_main <lista_instr> pr_end ;

<lista_instr> ::= <instrucao>";" | <instrucao>";" <lista_instr> ;

<instrucao> ::= <declaracao_var> | <comando> ;

<declaracao_var> ::= <lista_id> ;

<comando> ::= <atribuicao> | <input> | <output> | <selecao> | <repeticao> ;

<atribuicao> ::= <lista_id> "=" <expressao> ;



<input> ::= pr_read "(" <lista_inputs> ")" ;

<lista_inputs> ::= <inicio_input> <lista_id> | <inicio_input> <lista_id>";" <lista_inputs> ;

<inicio_input> ::= constante_string "," | î ;



<output> ::= pr_write "(" <lista_expr> ")" | pr_writeln "(" <lista_expr> ")" ;



<selecao> ::= <if> <elif> <else> ;

<if> ::= pr_if <expressao> <lista_comandos> ;

<elif> ::= î | pr_elif <expressao> <lista_comandos> <elif> ;

<else> ::= <lista_comandos> pr_end | î ;



<repeticao> ::= <repeat_while> | <repeat_until> ;

<repeat_while> ::= pr_repeat <lista_comandos> pr_while <expressao> ;

<repeat_until> ::= pr_repeat <lista_comandos> pr_until <expressao> ;


// utilitarios


<lista_comandos> ::= <comando> | <comando> <lista_comandos> ;

<lista_expr> ::= <expressao> | <expressao>"," <lista_expr> ;

<lista_id> ::= id | id"," <lista_id> ;

// <expressao>




